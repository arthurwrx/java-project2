name: CI/CD Pipeline for Java Spring Boot

on:  
  push:    
    branches:      
      - master  
  pull_request:    
    branches:      
      - master

jobs:  
  build:    
    runs-on: ubuntu-latest    
    steps:      
      - name: Acessa o código fonte da aplicação
        uses: actions/checkout@v2      
      - name: Configura o Java 17        
        uses: actions/setup-java@v1        
        with:          
          java-version: '17'      
      - name: Inicia o Maven        
        uses: actions/cache@v4        
        with:          
          path: ~/.m2          
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}          
          restore-keys: |            
            ${{ runner.os }}-maven-      
      - name: Dá build no Maven        
        run: mvn clean install      
      - name: Roda os testes do Maven        
        run: mvn test # Executa os testes Cucumber também
      
      # Publicar relatórios de teste
      - name: Publicar relatórios de teste
        uses: actions/upload-artifact@v4
        with:
          name: relatorios-de-teste
          path: target/surefire-reports

  dockerize:    
    needs: build    
    runs-on: ubuntu-latest    
    steps:      
      - name: Acessa o código fonte da aplicação
        uses: actions/checkout@v2      
      - name: Configura a Build do Docker Buildx        
        uses: docker/setup-buildx-action@v1      
      - name: Acessa as credenciais do DockerHub        
        uses: docker/login-action@v1        
        with:          
          username: ${{ secrets.DOCKER_USERNAME }}          
          password: ${{ secrets.DOCKER_TOKEN }}      
      - name: Constroi a imagem do Docker e dá push para Staging        
        run: |          
          docker build -t arthurwrx/java-project:staging .          
          docker push arthurwrx/java-project:staging  

  deploy:    
    needs: dockerize    
    runs-on: ubuntu-latest    
    steps:      
      - name: Acessa o código fonte da aplicação
        uses: actions/checkout@v2      
      - name: Instala o Docker Compose        
        run: |          
          sudo apt-get update          
          sudo apt-get install -y docker-compose      
      - name: Deploy para Staging        
        run: |          
          echo "Deploying to Staging environment"          
          docker compose -f docker-compose.staging.yml up -d      
      - name: Deploy para Produção        
        run: |          
          echo "Deploying to Production environment"          
          docker compose -f docker-compose.production.yml up -d
